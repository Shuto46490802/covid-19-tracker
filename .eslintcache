[{"/Users/shuto/Desktop/ReactProject/covid-19-tracker/covid-19-tracker/src/index.js":"1","/Users/shuto/Desktop/ReactProject/covid-19-tracker/covid-19-tracker/src/App.js":"2","/Users/shuto/Desktop/ReactProject/covid-19-tracker/covid-19-tracker/src/Components/Card.js":"3","/Users/shuto/Desktop/ReactProject/covid-19-tracker/covid-19-tracker/src/Components/CountryPicker.js":"4","/Users/shuto/Desktop/ReactProject/covid-19-tracker/covid-19-tracker/src/api/index.js":"5","/Users/shuto/Desktop/ReactProject/covid-19-tracker/covid-19-tracker/src/Components/Maps/Maps.js":"6","/Users/shuto/Desktop/ReactProject/covid-19-tracker/covid-19-tracker/src/Components/Maps/CamulativeMap/CamulativeMap.js":"7","/Users/shuto/Desktop/ReactProject/covid-19-tracker/covid-19-tracker/src/Components/Maps/ActiveMap/ActiveMap.js":"8","/Users/shuto/Desktop/ReactProject/covid-19-tracker/covid-19-tracker/src/Components/Maps/IncidentRate/IncidentRate.js":"9","/Users/shuto/Desktop/ReactProject/covid-19-tracker/covid-19-tracker/src/Components/Cards/InfectedCard/InfectedCard.js":"10","/Users/shuto/Desktop/ReactProject/covid-19-tracker/covid-19-tracker/src/Components/Cards/DeathsRecoveredCard/DeathsRecoveredCard.js":"11","/Users/shuto/Desktop/ReactProject/covid-19-tracker/covid-19-tracker/src/Components/Cards/ActiveIncidentRateCard/ActiveIncidentRateCard.js":"12","/Users/shuto/Desktop/ReactProject/covid-19-tracker/covid-19-tracker/src/Components/Charts/CountryCharts.js":"13","/Users/shuto/Desktop/ReactProject/covid-19-tracker/covid-19-tracker/src/Components/Charts/GlobalCharts.js":"14","/Users/shuto/Desktop/ReactProject/covid-19-tracker/covid-19-tracker/src/Components/Charts/GlobalTodayCharts.js":"15"},{"size":432,"mtime":1609278323533,"results":"16","hashOfConfig":"17"},{"size":22223,"mtime":1610770369369,"results":"18","hashOfConfig":"17"},{"size":2284,"mtime":1609816977798,"results":"19","hashOfConfig":"17"},{"size":1743,"mtime":1610573931082,"results":"20","hashOfConfig":"17"},{"size":6626,"mtime":1610481947669,"results":"21","hashOfConfig":"17"},{"size":4471,"mtime":1610768849619,"results":"22","hashOfConfig":"17"},{"size":2859,"mtime":1610673105913,"results":"23","hashOfConfig":"17"},{"size":3843,"mtime":1610078307056,"results":"24","hashOfConfig":"17"},{"size":2981,"mtime":1610056839820,"results":"25","hashOfConfig":"17"},{"size":7592,"mtime":1610768939301,"results":"26","hashOfConfig":"17"},{"size":8154,"mtime":1610760734445,"results":"27","hashOfConfig":"17"},{"size":6454,"mtime":1610768816253,"results":"28","hashOfConfig":"17"},{"size":11005,"mtime":1610770416212,"results":"29","hashOfConfig":"17"},{"size":7180,"mtime":1610770386671,"results":"30","hashOfConfig":"17"},{"size":8943,"mtime":1610770425014,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1lonzwq",{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/shuto/Desktop/ReactProject/covid-19-tracker/covid-19-tracker/src/index.js",[],["67","68"],"/Users/shuto/Desktop/ReactProject/covid-19-tracker/covid-19-tracker/src/App.js",["69","70","71","72","73"],"/Users/shuto/Desktop/ReactProject/covid-19-tracker/covid-19-tracker/src/Components/Card.js",[],["74","75"],"/Users/shuto/Desktop/ReactProject/covid-19-tracker/covid-19-tracker/src/Components/CountryPicker.js",["76"],"import React, { useState, useEffect } from \"react\";\n\nimport { NativeSelect, FormControl, InputLabel } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { fetchCountry } from \"../api\";\n\nimport \"../css/CountryPicker.css\";\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(.5),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        //   marginTop: theme.spacing(2),\n    }\n}));\n\nconst CountryPicker = ({ classes, toggleCountry }) => {\n\n    const [countries, setCountries] = useState([]);\n    const classStyle = useStyles();\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setCountries(await fetchCountry());\n        }\n        fetchAPI();\n\n    }, [setCountries]);\n\n    const modifiedData = countries\n        .map((data) => data)\n        .filter(({ data }) => data.confirmed > 0)\n        .sort((a, b) => a.name < b.name ? -1 : a.name > b.name ? 1 : 0);\n\n    return (\n        <div id=\"picker\" className={`${classes[6]}`}>\n            <FormControl className=\"form\" className={`${classStyle.formControl} `} id=\"form\">\n                <InputLabel shrink id=\"label\">Select a Country</InputLabel>\n                <NativeSelect id=\"select\" onChange={(e) => { toggleCountry(e.target.value) }} className={classes.selectEmpty}>\n                    <option value={\"select a country\"} className={\"option\"}>Global</option>\n                    {\n                        modifiedData.map((country, i) =>\n                            <option key={i} value={country.code} className={\"option\"} > {country.name} </option>)\n                    }\n                </NativeSelect>\n            </FormControl>\n        </div>\n    )\n};\n\nexport default CountryPicker;","/Users/shuto/Desktop/ReactProject/covid-19-tracker/covid-19-tracker/src/api/index.js",[],"/Users/shuto/Desktop/ReactProject/covid-19-tracker/covid-19-tracker/src/Components/Maps/Maps.js",["77"],"import React, { useEffect, useState } from \"react\";\n\n//components\nimport CamulativeMap from \"./CamulativeMap/CamulativeMap\";\nimport ActiveMap from \"./ActiveMap/ActiveMap\";\nimport IncidentRate from \"./IncidentRate/IncidentRate\";\n\nimport \"./Maps.css\";\n\nconst Maps = ({ classes, provincesData, setMapExpand, mapExpand, expandIcon, shrinkIcon }) => {\n\n    const [isMap, setIsMap] = useState(\"calmulative\");\n    const [isHover, setIsHover] = useState(false);\n\n    //check if data has been asinged to countries\n    if (!provincesData[0]) {\n        return \"Loading\"\n    };\n\n    //data from country without province\n    const noProvince = provincesData\n        .filter((data) => data.length === 1)\n        .map((data) => data[0])\n        .filter((data) => data)\n        .filter(({ lat, confirmed }) => lat !== null && confirmed > 50000);\n\n    //data from countries with provinces\n    const provinces = provincesData\n        .filter((data) => data.length > 1)\n        .map((data) => data\n            .filter(({ lat, confirmed, country }) => lat !== null && country !== \"US\" && confirmed > 10000));\n    //data from US    \n    const usProvinces = provincesData\n        .filter((data) => data.length > 1)\n        .map((data) => data\n            .filter(({ lat, confirmed, country }) => lat !== null && country === \"US\" && confirmed > 50000));\n\n    //format number with separator \n    const formatNumber = inputNumber => {\n        let formetedNumber = (Number(inputNumber)).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\n        let splitArray = formetedNumber.split('.');\n        if (splitArray.length > 1) {\n            formetedNumber = splitArray[0];\n        }\n        return (formetedNumber);\n    };\n\n    //toggle map togglers border bottom\n    let { calmulativeStyle, activeStyle, incidentRateStyle } = {};\n    const onStyle = { borderBottom: \"3px solid white\", backgroundColor: \"#240090\" };\n    calmulativeStyle = isMap === \"calmulative\" ?\n        onStyle :\n        {}\n    activeStyle = isMap === \"active\" ?\n        onStyle :\n        {}\n    incidentRateStyle = isMap === \"incidentRate\" ?\n        onStyle :\n        {}\n\n    return (\n        <div>\n            <div\n                className={`${classes[3]}`}\n                id=\"maps-toggler\"\n                onMouseEnter={() => setIsHover(true)}\n                onMouseLeave={() => setIsHover(false)}\n                style={mapExpand ? { width: \"1410px\", height: \"735px\", marginLeft: \".6em\" } : { width: \"740px\", height: \"420px\" }}\n            >\n                <div className={\"expand-shrink-icon-wrapper\"} >\n                    {\n                        isHover\n                            ? !mapExpand\n                                ? <div style={{ top: \"-6px\", right: \"-5px\" }} onClick={() => setMapExpand(!mapExpand)} className={\"expand-shrink-icon\"}>{expandIcon}</div>\n                                : <div style={{ top: \"-6px\", right: \"-5px\" }} onClick={() => setMapExpand(!mapExpand)} className={\"expand-shrink-icon\"}>{shrinkIcon}</div>\n                            : null\n                    }\n                </div>\n                <div id=\"maps-wrapper\">\n                    {\n                        isMap === \"calmulative\"\n                            ? <CamulativeMap mapExpand={mapExpand} classes={classes} noProvince={noProvince} provinces={provinces} usProvinces={usProvinces} formatNumber={formatNumber} />\n                            : isMap === \"active\"\n                                ? <ActiveMap noProvince={noProvince} provinces={provinces} usProvinces={usProvinces} formatNumber={formatNumber} />\n                                : isMap === \"incidentRate\"\n                                    ? <IncidentRate noProvince={noProvince} provinces={provinces} usProvinces={usProvinces} formatNumber={formatNumber} />\n                                    : null\n                    }\n                </div>\n                <div style={mapExpand ? { marginLeft: \"1em\" } : { marginLeft: \".2em\" }} id=\"map-toggler\">\n                    <div className={\"toggler\"} style={calmulativeStyle} onClick={() => { setIsMap(\"calmulative\") }}> Calmulative Cases </div>\n                    <div className={\"toggler\"} style={activeStyle} onClick={() => { setIsMap(\"active\") }} >Active Cases</div>\n                    <div className={\"toggler\"} style={incidentRateStyle} onClick={() => { setIsMap(\"incidentRate\") }} > Incident Rate </div>\n                </div>\n            </div >\n        </div >\n    )\n}\n\n\n\nexport default Maps;","/Users/shuto/Desktop/ReactProject/covid-19-tracker/covid-19-tracker/src/Components/Maps/CamulativeMap/CamulativeMap.js",["78","79"],"import React, { useState, useEffect } from \"react\";\n\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\n\n\nimport L from \"leaflet\";\n\nconst CamulativeMap = ({ noProvince, formatNumber, usProvinces, provinces }) => {\n\n  const toggleIconSize = (confirmed) => {\n    let iconSize = [];\n\n    if (confirmed > 700000) {\n      iconSize = [20, 20]\n    } else if (confirmed > 500000) {\n      iconSize = [15, 15]\n    } else if (confirmed > 300000) {\n      iconSize = [10, 10]\n    } else {\n      iconSize = [5, 5]\n    }\n    return new L.Icon({\n      iconUrl: \"https://upload.wikimedia.org/wikipedia/commons/thumb/0/02/Red_Circle%28small%29.svg/1024px-Red_Circle%28small%29.svg.png\",\n      iconSize: iconSize\n    });\n  };\n\n  return (\n    <MapContainer center={[28.45835, 10.07813]} zoom={1} scrollWheelZoom={false}>\n      <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      {\n        noProvince.map((data, i) =>\n          <Marker\n            key={i}\n            position={[data.lat, data.long]}\n            icon={toggleIconSize(data.confirmed)}\n          >\n            <Popup>\n              <h3>{data.key}</h3>\n              <p>Cases: <strong>{formatNumber(data.confirmed)}</strong></p>\n              <p>Recovered: <strong>{formatNumber(data.recovered)}</strong></p>\n              <p>Deaths: <strong>{formatNumber(data.deaths)}</strong></p>\n            </Popup>\n          </Marker>\n        )\n      }\n      {\n        provinces.map((data) =>\n          data.map((data, i) =>\n            <Marker\n              key={i}\n              position={[data.lat, data.long]}\n              icon={toggleIconSize(data.confirmed)}\n            >\n              <Popup position={[data.lat, data.long]}>\n                <h3>{data.key}</h3>\n                <p>Cases: <strong>{formatNumber(data.confirmed)}</strong></p>\n                <p>Recovered: <strong>{formatNumber(data.recovered)}</strong></p>\n                <p>Deaths: <strong>{formatNumber(data.deaths)}</strong></p>\n              </Popup>\n            </Marker>\n          )\n        )\n      }\n      {\n        usProvinces.map((data) =>\n          data.map((data, i) =>\n            <Marker\n              key={i}\n              position={[data.lat, data.long]}\n              icon={toggleIconSize(data.confirmed)}\n            >\n              <Popup position={[data.lat, data.long]}>\n                <h3>{data.key}</h3>\n                <p>Cases: <strong>{formatNumber(data.confirmed)}</strong></p>\n                <p>Recovered: <strong>{formatNumber(data.recovered)}</strong></p>\n                <p>Deaths: <strong>{formatNumber(data.deaths)}</strong></p>\n              </Popup>\n            </Marker>\n          )\n        )\n      }\n    </MapContainer>\n  )\n};\n\n\n\nexport default CamulativeMap;","/Users/shuto/Desktop/ReactProject/covid-19-tracker/covid-19-tracker/src/Components/Maps/ActiveMap/ActiveMap.js",[],"/Users/shuto/Desktop/ReactProject/covid-19-tracker/covid-19-tracker/src/Components/Maps/IncidentRate/IncidentRate.js",[],"/Users/shuto/Desktop/ReactProject/covid-19-tracker/covid-19-tracker/src/Components/Cards/InfectedCard/InfectedCard.js",[],"/Users/shuto/Desktop/ReactProject/covid-19-tracker/covid-19-tracker/src/Components/Cards/DeathsRecoveredCard/DeathsRecoveredCard.js",[],"/Users/shuto/Desktop/ReactProject/covid-19-tracker/covid-19-tracker/src/Components/Cards/ActiveIncidentRateCard/ActiveIncidentRateCard.js",[],"/Users/shuto/Desktop/ReactProject/covid-19-tracker/covid-19-tracker/src/Components/Charts/CountryCharts.js",[],"/Users/shuto/Desktop/ReactProject/covid-19-tracker/covid-19-tracker/src/Components/Charts/GlobalCharts.js",[],"/Users/shuto/Desktop/ReactProject/covid-19-tracker/covid-19-tracker/src/Components/Charts/GlobalTodayCharts.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":53,"column":32,"nodeType":"86","messageId":"87","endLine":53,"endColumn":53},{"ruleId":"88","severity":1,"message":"89","line":246,"column":17,"nodeType":"90","endLine":246,"endColumn":96},{"ruleId":"91","severity":1,"message":"92","line":250,"column":64,"nodeType":"93","endLine":250,"endColumn":79},{"ruleId":"91","severity":1,"message":"92","line":251,"column":277,"nodeType":"93","endLine":251,"endColumn":292},{"ruleId":"91","severity":1,"message":"92","line":252,"column":55,"nodeType":"93","endLine":252,"endColumn":70},{"ruleId":"80","replacedBy":"94"},{"ruleId":"82","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":40,"column":43,"nodeType":"93","endLine":40,"endColumn":83},{"ruleId":"84","severity":1,"message":"98","line":1,"column":17,"nodeType":"86","messageId":"87","endLine":1,"endColumn":26},{"ruleId":"84","severity":1,"message":"99","line":1,"column":17,"nodeType":"86","messageId":"87","endLine":1,"endColumn":25},{"ruleId":"84","severity":1,"message":"98","line":1,"column":27,"nodeType":"86","messageId":"87","endLine":1,"endColumn":36},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'setCountryChartExpand' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["100"],["101"],"react/jsx-no-duplicate-props","No duplicate props allowed","'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]